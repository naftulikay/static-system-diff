###############################################################################
#
#  MIME media types and programs that process those types
#
#  Much of this file is generated automatically by the program "update-mime".
#  Please see the "update-mime" man page for more information.
#
#  Users can add their own rules if they wish by creating a ".mailcap"
#  file in their home directory.  Entries included there will take
#  precedence over those listed here.
#
###############################################################################


###############################################################################
#
#  User section follows:  Any entries included in this section will take
#  precedence over those created by "update-mime".  DO NOT CHANGE the
#  "User Section Begins" and "User Section Ends" lines, or anything outside
#  of this section!
#

# ----- User Section Begins ----- #
# -----  User Section Ends  ----- #

###############################################################################

text/plain; less '%s'; needsterminal
application/x-troff-man; /usr/bin/man -X100 -l '%s'; test=test -n "$DISPLAY" -a -e /usr/bin/gxditview; description=Man page
text/troff; /usr/bin/man -X100 -l '%s'; test=test -n "$DISPLAY" -a -e /usr/bin/gxditview; description=Man page
application/x-troff-man; /usr/bin/man -l '%s'; needsterminal; description=Man page
text/troff; /usr/bin/man -l '%s'; needsterminal; description=Man page
text/html; /usr/bin/sensible-browser %s; description=HTML Text; nametemplate=%s.html
application/x-troff-man; /usr/bin/nroff -mandoc -Tutf8; copiousoutput; print=/usr/bin/nroff -mandoc -Tutf8 | print text/plain:-
text/troff; /usr/bin/nroff -mandoc -Tutf8; copiousoutput; print=/usr/bin/nroff -mandoc -Tutf8 | print text/plain:-
application/x-info; /usr/bin/info -f '%s'; needsterminal; description=GNU Info document
text/plain; more %s; needsterminal
application/pdf; evince %s; test=test -n "$DISPLAY"
application/x-bzpdf; evince %s; test=test -n "$DISPLAY"
application/x-gzpdf; evince %s; test=test -n "$DISPLAY"
application/x-xzpdf; evince %s; test=test -n "$DISPLAY"
application/x-ext-pdf; evince %s; test=test -n "$DISPLAY"
application/postscript; evince %s; test=test -n "$DISPLAY"
application/x-bzpostscript; evince %s; test=test -n "$DISPLAY"
application/x-gzpostscript; evince %s; test=test -n "$DISPLAY"
image/x-eps; evince %s; test=test -n "$DISPLAY"
image/x-bzeps; evince %s; test=test -n "$DISPLAY"
image/x-gzeps; evince %s; test=test -n "$DISPLAY"
application/x-ext-ps; evince %s; test=test -n "$DISPLAY"
application/x-ext-eps; evince %s; test=test -n "$DISPLAY"
application/illustrator; evince %s; test=test -n "$DISPLAY"
application/x-dvi; evince %s; test=test -n "$DISPLAY"
application/x-bzdvi; evince %s; test=test -n "$DISPLAY"
application/x-gzdvi; evince %s; test=test -n "$DISPLAY"
application/x-ext-dvi; evince %s; test=test -n "$DISPLAY"
image/vnd.djvu+multipage; evince %s; test=test -n "$DISPLAY"
application/x-ext-djv; evince %s; test=test -n "$DISPLAY"
application/x-ext-djvu; evince %s; test=test -n "$DISPLAY"
image/tiff; evince %s; test=test -n "$DISPLAY"
application/x-cbr; evince %s; test=test -n "$DISPLAY"
application/x-cbz; evince %s; test=test -n "$DISPLAY"
application/x-cb7; evince %s; test=test -n "$DISPLAY"
application/x-cbt; evince %s; test=test -n "$DISPLAY"
application/x-ext-cbr; evince %s; test=test -n "$DISPLAY"
application/x-ext-cbz; evince %s; test=test -n "$DISPLAY"
application/vnd.comicbook+zip; evince %s; test=test -n "$DISPLAY"
application/x-ext-cb7; evince %s; test=test -n "$DISPLAY"
application/x-ext-cbt; evince %s; test=test -n "$DISPLAY"
application/oxps; evince %s; test=test -n "$DISPLAY"
application/vnd.ms-xpsdocument; evince %s; test=test -n "$DISPLAY"
application/pkcs12; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs12+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs7-mime; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs7-mime+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs8; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs8+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-cert+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-crl; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-crl+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pem-file; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pem-key; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pkcs12; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pkcs7-certificates; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-x509-ca-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-x509-user-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs10; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs10+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-spkac; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-spkac+base64; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
x-scheme-handler/appstream; io.elementary.appcenter --show-updates %s; test=test -n "$DISPLAY"
text/calendar; io.elementary.calendar -a %s; test=test -n "$DISPLAY"
text/plain; io.elementary.code --new-window %s; test=test -n "$DISPLAY"
inode/directory; io.elementary.code --new-window %s; test=test -n "$DISPLAY"
inode/directory; io.elementary.files-pkexec %s; test=test -n "$DISPLAY"
x-content/audio-player; io.elementary.music %s; test=test -n "$DISPLAY"
x-content/audio-cdda; io.elementary.music %s; test=test -n "$DISPLAY"
application/ogg; io.elementary.music %s; test=test -n "$DISPLAY"
application/x-extension-m4a; io.elementary.music %s; test=test -n "$DISPLAY"
application/x-extension-mp4; io.elementary.music %s; test=test -n "$DISPLAY"
application/x-flac; io.elementary.music %s; test=test -n "$DISPLAY"
application/x-ogg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/3gpp; io.elementary.music %s; test=test -n "$DISPLAY"
audio/aac; io.elementary.music %s; test=test -n "$DISPLAY"
audio/ac3; io.elementary.music %s; test=test -n "$DISPLAY"
audio/AMR; io.elementary.music %s; test=test -n "$DISPLAY"
audio/AMR-WB; io.elementary.music %s; test=test -n "$DISPLAY"
audio/basic; io.elementary.music %s; test=test -n "$DISPLAY"
audio/flac; io.elementary.music %s; test=test -n "$DISPLAY"
audio/midi; io.elementary.music %s; test=test -n "$DISPLAY"
audio/mp2; io.elementary.music %s; test=test -n "$DISPLAY"
audio/mp4; io.elementary.music %s; test=test -n "$DISPLAY"
audio/mpeg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/ogg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/vnd.rn-realaudio; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-aiff; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-ape; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-flac; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-gsm; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-it; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-m4a; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-matroska; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-mod; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-mp3; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-mpeg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-mpegurl; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-ms-asf; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-ms-asx; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-ms-wax; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-ms-wma; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-musepack; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-opus+ogg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-aiff; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-au; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-realaudio; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-realaudio-plugin; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-wav; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-pn-windows-acm; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-realaudio; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-real-audio; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-sbc; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-scpls; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-speex; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-tta; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-vorbis; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-vorbis+ogg; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-wav; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-wavpack; io.elementary.music %s; test=test -n "$DISPLAY"
audio/x-xm; io.elementary.music %s; test=test -n "$DISPLAY"
image/jpeg; io.elementary.photos %s; test=test -n "$DISPLAY"
image/jpg; io.elementary.photos %s; test=test -n "$DISPLAY"
image/pjpeg; io.elementary.photos %s; test=test -n "$DISPLAY"
image/png; io.elementary.photos %s; test=test -n "$DISPLAY"
image/tiff; io.elementary.photos %s; test=test -n "$DISPLAY"
image/gif; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-3fr; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-adobe-dng; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-arw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-bay; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-bmp; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-canon-cr2; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-canon-crw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-cap; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-cr2; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-crw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-dcr; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-dcraw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-dcs; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-dng; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-drf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-eip; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-erf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-fff; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-fuji-raf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-iiq; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-k25; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-kdc; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-mef; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-minolta-mrw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-mos; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-mrw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-nef; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-nikon-nef; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-nrw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-olympus-orf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-orf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-panasonic-raw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-pef; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-pentax-pef; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-png; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-ptx; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-pxn; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-r3d; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-raf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-raw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-rw2; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-rwl; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-rwz; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-sigma-x3f; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-sony-arw; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-sony-sr2; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-sony-srf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-sr2; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-srf; io.elementary.photos %s; test=test -n "$DISPLAY"
image/x-x3f; io.elementary.photos %s; test=test -n "$DISPLAY"
image/webp; io.elementary.photos %s; test=test -n "$DISPLAY"
x-content/image-dcf; io.elementary.photos %s; test=test -n "$DISPLAY"
x-scheme-handler/settings; io.elementary.switchboard %s; test=test -n "$DISPLAY"
application/x-musepack; io.elementary.videos %s; test=test -n "$DISPLAY"
application/musepack; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-ape; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-id3; io.elementary.videos %s; test=test -n "$DISPLAY"
application/ogg; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-ogg; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-vorbis+ogg; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-flac; io.elementary.videos %s; test=test -n "$DISPLAY"
video/quicktime; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-quicktime; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-quicktimeplayer; io.elementary.videos %s; test=test -n "$DISPLAY"
application/smil; io.elementary.videos %s; test=test -n "$DISPLAY"
application/vnd.rn-realmedia; io.elementary.videos %s; test=test -n "$DISPLAY"
video/vnd.rn-realvideo; io.elementary.videos %s; test=test -n "$DISPLAY"
application/asx; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-asf-plugin; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-msvideo; io.elementary.videos %s; test=test -n "$DISPLAY"
video/msvideo; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-mplayer2; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-ms-wmv; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-asf; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-wm; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-wmv; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-wmp; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ms-wvx; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-drm-v2; io.elementary.videos %s; test=test -n "$DISPLAY"
video/mpeg; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-mpeg; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-mpeg2; io.elementary.videos %s; test=test -n "$DISPLAY"
video/mp4; io.elementary.videos %s; test=test -n "$DISPLAY"
video/3gpp; io.elementary.videos %s; test=test -n "$DISPLAY"
video/fli; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-fli; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-flv; io.elementary.videos %s; test=test -n "$DISPLAY"
video/vnd.vivo; io.elementary.videos %s; test=test -n "$DISPLAY"
application/x-nsv-vp3-mp3; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-matroska; io.elementary.videos %s; test=test -n "$DISPLAY"
video/matroska; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-mng; io.elementary.videos %s; test=test -n "$DISPLAY"
video/webm; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-webm; io.elementary.videos %s; test=test -n "$DISPLAY"
video/mp2t; io.elementary.videos %s; test=test -n "$DISPLAY"
video/vnd.mpegurl; io.elementary.videos %s; test=test -n "$DISPLAY"
video/x-ogm+ogg; io.elementary.videos %s; test=test -n "$DISPLAY"
text/english; nvim %s; needsterminal
text/plain; nvim %s; needsterminal
text/x-makefile; nvim %s; needsterminal
text/x-c++hdr; nvim %s; needsterminal
text/x-c++src; nvim %s; needsterminal
text/x-chdr; nvim %s; needsterminal
text/x-csrc; nvim %s; needsterminal
text/x-java; nvim %s; needsterminal
text/x-moc; nvim %s; needsterminal
text/x-pascal; nvim %s; needsterminal
text/x-tcl; nvim %s; needsterminal
text/x-tex; nvim %s; needsterminal
application/x-shellscript; nvim %s; needsterminal
text/x-c; nvim %s; needsterminal
text/x-c++; nvim %s; needsterminal
inode/directory; io.elementary.terminal -w %s; test=test -n "$DISPLAY"
text/html; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
text/xml; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
application/xhtml+xml; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
x-scheme-handler/http; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
x-scheme-handler/https; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
multipart/related; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
application/x-mimearchive; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
message/rfc822; epiphany --incognito-mode %s; test=test -n "$DISPLAY"
application/x-font-ttf; gnome-font-viewer %s; test=test -n "$DISPLAY"
application/x-font-pcf; gnome-font-viewer %s; test=test -n "$DISPLAY"
application/x-font-type1; gnome-font-viewer %s; test=test -n "$DISPLAY"
application/x-font-otf; gnome-font-viewer %s; test=test -n "$DISPLAY"
font/ttf; gnome-font-viewer %s; test=test -n "$DISPLAY"
font/otf; gnome-font-viewer %s; test=test -n "$DISPLAY"
x-scheme-handler/mailto; pantheon-mail mailto: %s; test=test -n "$DISPLAY"
text/english; vim %s; needsterminal
text/plain; vim %s; needsterminal
text/x-makefile; vim %s; needsterminal
text/x-c++hdr; vim %s; needsterminal
text/x-c++src; vim %s; needsterminal
text/x-chdr; vim %s; needsterminal
text/x-csrc; vim %s; needsterminal
text/x-java; vim %s; needsterminal
text/x-moc; vim %s; needsterminal
text/x-pascal; vim %s; needsterminal
text/x-tcl; vim %s; needsterminal
text/x-tex; vim %s; needsterminal
application/x-shellscript; vim %s; needsterminal
text/x-c; vim %s; needsterminal
text/x-c++; vim %s; needsterminal
text/plain; view %s; edit=vim %s; compose=vim %s; test=test -x /usr/bin/vim; needsterminal
application/zip; unzip -l %s; nametemplate=%s.zip; copiousoutput
text/plain; view %s; edit=vi %s; compose=vi %s; needsterminal
image/avs; display-im6.q16. 'avs:%s'; test=test -n "$DISPLAY"
image/bie; display-im6.q16 'jbig:%s'; test=test -n "$DISPLAY"
image/x-ms-bmp; display-im6.q16 'bmp:%s'; test=test -n "$DISPLAY"
image/cmyk; display-im6.q16 'cmyk:%s'; test=test -n "$DISPLAY"
image/dcx; display-im6.q16 'dcx:%s'; test=test -n "$DISPLAY"
image/eps; display-im6.q16 'eps:%s'; test=test -n "$DISPLAY"
image/fax; display-im6.q16 'fax:%s'; test=test -n "$DISPLAY"
image/fits; display-im6.q16 'fits:%s'; test=test -n "$DISPLAY"
image/gif; display-im6.q16 'gif:%s'; test=test -n "$DISPLAY"
image/gray; display-im6.q16 'gray:%s'; test=test -n "$DISPLAY"
image/jpeg; display-im6.q16 'jpeg:%s'; test=test -n "$DISPLAY"
image/pjpeg; display-im6.q16 'jpeg:%s'; test=test -n "$DISPLAY"
image/miff; display-im6.q16 'miff:%s'; test=test -n "$DISPLAY"
image/mono; display-im6.q16 'mono:%s'; test=test -n "$DISPLAY"
image/mtv; display-im6.q16 'mtv:%s'; test=test -n "$DISPLAY"
image/x-portable-bitmap; display-im6.q16 'pbm:%s'; test=test -n "$DISPLAY"
image/pcd; display-im6.q16 'pcd:%s'; test=test -n "$DISPLAY"
image/pcx; display-im6.q16 'pcx:%s'; test=test -n "$DISPLAY"
image/pdf; display-im6.q16 'pdf:%s'; test=test -n "$DISPLAY"
image/x-portable-graymap; display-im6.q16 'pgm:%s'; test=test -n "$DISPLAY"
image/pict; display-im6.q16 'pict:%s'; test=test -n "$DISPLAY"
image/png; display-im6.q16 'png:%s'; test=test -n "$DISPLAY"
image/x-portable-anymap; display-im6.q16 'pnm:%s'; test=test -n "$DISPLAY"
image/x-portable-pixmap; display-im6.q16 'ppm:%s'; test=test -n "$DISPLAY"
image/ps; display-im6.q16 'ps:%s'; test=test -n "$DISPLAY"
image/rad; display-im6.q16 'rad:%s'; test=test -n "$DISPLAY"
image/x-rgb; display-im6.q16 'rgb:%s'; test=test -n "$DISPLAY"
image/rgba; display-im6.q16 'rgba:%s'; test=test -n "$DISPLAY"
image/rla; display-im6.q16 'rla:%s'; test=test -n "$DISPLAY"
image/rle; display-im6.q16 'rle:%s'; test=test -n "$DISPLAY"
image/sgi; display-im6.q16 'sgi:%s'; test=test -n "$DISPLAY"
image/sun-raster; display-im6.q16 'sun:%s'; test=test -n "$DISPLAY"
image/targa; display-im6.q16 'tga:%s'; test=test -n "$DISPLAY"
image/tiff; display-im6.q16 'tiff:%s'; test=test -n "$DISPLAY"
image/uyvy; display-im6.q16 'uyvy:%s'; test=test -n "$DISPLAY"
image/vid; display-im6.q16 'vid:%s'; test=test -n "$DISPLAY"
image/viff; display-im6.q16 'viff:%s'; test=test -n "$DISPLAY"
image/x-xbitmap; display-im6.q16 'xbm:%s'; test=test -n "$DISPLAY"
image/x-xpixmap; display-im6.q16 'xpm:%s'; test=test -n "$DISPLAY"
image/x-xwindowdump; display-im6.q16 'xwd:%s'; test=test -n "$DISPLAY"
image/x-icon; display-im6.q16 'icon:%s'; test=test -n "$DISPLAY"
image/yuv; display-im6.q16 'yuv:%s'; test=test -n "$DISPLAY"
application/x-troff-man; /usr/bin/man -Tascii -l '%s' | col -b; copiousoutput; description=Man page
text/troff; /usr/bin/man -Tascii -l '%s' | col -b; copiousoutput; description=Man page
text/*; less '%s'; needsterminal
text/*; view %s; edit=vim %s; compose=vim %s; test=test -x /usr/bin/vim; needsterminal
application/x-info; /usr/bin/info --subnodes -o /dev/stdout -f '%s' 2>/dev/null; copiousoutput; description=GNU Info document
application/x-tar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
application/x-gtar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
application/x-ustar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
text/*; more %s; needsterminal
text/*; view %s; edit=vi %s; compose=vi %s; needsterminal
application/vnd.debian.binary-package; /usr/lib/mime/debian-view %s; needsterminal; description=Debian GNU/Linux Package; nametemplate=%s.deb
